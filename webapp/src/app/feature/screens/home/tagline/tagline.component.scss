/**
 * This SCSS file contains styles for the home component.
 */

$primary-color: #333333;

/**
  * Styles for the tagline container.
  */
.tagline-container {
  padding-top: 40px;
  padding-bottom: 10px;
  width: 100%;
  display: flex;
  word-wrap: break-word;
  line-height: 65px;
  // background-color: red;
}

/**
  * Styles for the animated tagline.
  */
.animated-tagline {
  padding-left: 1rem;
  display: flex;
  justify-content: center;
  align-items: center;
  height: 100%;
  font-family: "Lora", serif;
  // background-color: blue;
  font-size: 56px;
  color: #333333;

  /* This will apply when the viewport is between 770px and 1200px */
  @media (min-width: 550px) and (max-width: 800px) {
    font-size: 40px;
  }

  /* This will apply when the viewport is 770px or less */
  @media (max-width: 549px) {
    font-size: 24px;
  }
}

/**
  * Styles for the span element within the animated tagline.
  */
.animated-tagline span {
  // background-color: green;
  position: relative;
  display: flex;
  justify-content: center;
  align-items: center;
  color: #333333;
  height: 100%;
  padding-bottom: 2px;
  margin-left: 16px;

}

/**
  * Styles for the content before the span element.
  */
.animated-tagline span::before {
  content: "premium.";
  font-family: 'Lexend', sans-serif;
  font-weight: bold;
  font-size: 56px;
  animation: words 20s infinite;

  /* This will apply when the viewport is between 770px and 1200px */
  @media (min-width: 550px) and (max-width: 800px) {
    font-size: 40px;
  }

  /* This will apply when the viewport is 770px or less */
  @media (max-width: 549px) {
    font-size: 24px;
  }
}

/**
  * Styles for the content after the span element.
  */
.animated-tagline span::after {
  content: "";
  position: absolute;
  color: #333333;
  width: calc(100% + 8px);
  height: 100%;
  background-color: #ffffff;
  border-left: 2px solid #333333;
  right: -8px;
  animation: cursor .8s infinite, typing 4s infinite;

  /* This will apply when the viewport is between 770px and 1200px */
  @media (min-width: 550px) and (max-width: 800px) {
    height: 72%;
  }

  /* This will apply when the viewport is 770px or less */
  @media (max-width: 549px) {
    height: 43%;
  }
}

/**
  * @keyframes cursor
  * 
  * This is a CSS animation that simulates a cursor effect.
  * The animation changes the border-left property of an element to `2px solid #ffffff` at the end of the animation duration.
  */
@keyframes cursor {
  to {
    border-left: 2px solid #ffffff
  }
}

/**
  * @keyframes words
  * 
  * This is a CSS animation that changes the `content` property of an element at different points in the animation timeline.
  * The `content` property is typically used with pseudo-elements (`::before` and `::after`) to insert generated content.
  * In this animation, the `content` property changes between "premium.", "durable.", and "affordable." at different intervals.
  */
@keyframes words {

  0%,
  20% {
    content: "premium.";
    // color: #ED5564;
  }

  21%,
  40% {
    content: "durable.";
    // color: #FFCE54;
  }

  41%,
  60% {
    content: "affordable.";
    // color: #A0D568;
  }

  61%,
  80% {
    content: "unique.";
    // color: #4FC1E8;
  }

  81%,
  100% {
    content: "versatile.";
    // color: #AC92EB;
  }

}

/**
  * @keyframes typing
  * 
  * This is a CSS animation that changes the `width` property of an element at different points in the animation timeline.
  * The element starts at full width (`calc(100% + 8px)`), contracts to zero width at the midpoint of the animation, and then expands back to full width by the end of the animation.
  * This creates a typing effect, where the element appears to expand and contract.
  * 
  */
@keyframes typing {
  0% {
    width: calc(100% + 8px);
  }

  50% {
    width: 0;
  }

  100% {
    width: calc(100% + 8px);
  }
}