// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use '@angular/material' as mat;
// Plus imports for other components in your app.

@import './assets/styles/palettes.scss';

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$primary: mat.define-palette($primary-palette, 400, 300, 600);
$accent: mat.define-palette($secondary-palette, 100, 50, 300);

// The warn palette is optional (defaults to red).
$warn: mat.define-palette($warning-palette, 400, 300, 500);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$theme: mat.define-light-theme((color: (primary: $primary,
                accent: $accent,
                warn: $warn,

            )));

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-component-themes($theme);

body {
    margin: 0;
    padding: 0;
    font-family: Roboto, Noto, sans-serif;
    font-weight: regular;
    font-size: 14px;
}


.display-4 {
    font-family: Roboto, Noto, sans-serif;
    font-weight: light;
    font-size: 112px;
}

.display-3 {
    font-family: Roboto, Noto, sans-serif;
    font-weight: regular;
    font-size: 56px;
}

.display-2 {
    font-family: Roboto, Noto, sans-serif;
    font-weight: regular;
    font-size: 45px;
}

.display-1 {
    font-family: Roboto, Noto, sans-serif;
    font-weight: regular;
    font-size: 34px;
}

.headline {
    font-family: Roboto, Noto, sans-serif;
    font-weight: regular;
    font-size: 24px;
}

.title {
    font-family: Roboto, Noto, sans-serif;
    font-weight: medium;
    font-size: 20px;
}

.subheading-2 {
    font-family: Roboto, Noto, sans-serif;
    font-weight: medium;
    font-size: 16px;
}

.subheading-1 {
    font-family: Roboto, Noto, sans-serif;
    font-weight: regular;
    font-size: 16px;
}

.body-2 {
    font-family: Roboto, Noto, sans-serif;
    font-weight: medium;
    font-size: 14px;
}

.body-1 {
    font-family: Roboto, Noto, sans-serif;
    font-weight: regular;
    font-size: 14px;
}

caption {
    font-family: Roboto, Noto, sans-serif;
    font-weight: regular;
    font-size: 12px;
}

button {
    font-family: Roboto, Noto, sans-serif;
    font-weight: medium;
    font-size: 14px;
}

input {
    font-family: Roboto, Noto, sans-serif;
    font-weight: regular;
    font-size: 12px;
}



* {
    // see: https://www.youtube.com/watch?v=cH8VbLM1958
    min-width: 0px;
    min-height: 0px;
}


html,
body {
    height: 100%;
}

body {
    margin: 0;
    font-family: Roboto, "Helvetica Neue", sans-serif;
}

@media (min-width: 600px) {
    .body-content {
        padding-top: 64px;
    }
}

@media (max-width: 599px) {
    .body-content {
        padding-top: 56px;
    }
}


// see this --- https://dev.to/oncode/display-your-pwa-website-fullscreen-4776

// apply this to top and bottom content
.element {
    height: env(safe-area-inset-top);
    width: env(safe-area-inset-left);
    margin: env(safe-area-inset-right);
    // you can also use fallback values
    padding: env(safe-area-inset-bottom, 20px);
}